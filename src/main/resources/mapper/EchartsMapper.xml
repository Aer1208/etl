<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mongohua.etl.mapper.EchartsMapper" >
    <resultMap id="EchartTopN" type="com.mongohua.etl.model.Echarts" >
        <id column="inst_id" property="jobId" jdbcType="INTEGER" />
        <result column="run_time" property="runTime" jdbcType="INTEGER" />
    </resultMap>

    <resultMap id="EchartRunTime" type="com.mongohua.etl.model.Echarts">
        <id column="data_date" property="dataDate" jdbcType="INTEGER"/>
        <result column="run_time" property="runTime" jdbcType="INTEGER"/>
        <result column="run_job_cnt" property="runJobCnt" jdbcType="INTEGER" />
    </resultMap>
    <resultMap id="EchartAllJobs" type="com.mongohua.etl.model.Echarts">
        <id column="tot_job_cnt" property="totJobCnt" jdbcType="INTEGER"/>
        <result column="succ_job_cnt" property="succJobCnt" jdbcType="INTEGER"/>
        <result column="err_job_cnt" property="errJobCnt" jdbcType="INTEGER" />
        <result column="not_run_job_cnt" property="notRunJobCnt" jdbcType="INTEGER" />
    </resultMap>

    <select id="topN" resultMap="EchartTopN"  >
        SELECT inst_id, UNIX_TIMESTAMP(end_time) - UNIX_TIMESTAMP(start_time) run_time
          FROM t_job_inst
         where data_date like concat(#{dataDate},'%')
         order by UNIX_TIMESTAMP(end_time) - UNIX_TIMESTAMP(start_time) desc
         limit #{top};
    </select>

    <select id="getRunTime" resultMap="EchartRunTime">
        SELECT substr(data_date,1,8) data_date,
                AVG(UNIX_TIMESTAMP(END_TIME) - UNIX_TIMESTAMP(start_time)) run_time,
                count(*) run_job_cnt
          FROM t_job_inst
        WHERE status=1
          and substr(data_date,1,8) <![CDATA[ > ]]>  DATE_FORMAT(date_sub(curdate(), INTERVAL 8 DAY),'%Y%m%d')
        group by substr(data_date,1,8);
    </select>

    <select id="allJobMonitor" resultMap="EchartAllJobs">
    SELECT a.tot_inst_cnt tot_job_cnt,
            b.succ_inst_cnt succ_job_cnt,
            b.err_inst_cnt err_job_cnt
       from (
         select sum(inst_cnt) tot_inst_cnt
           from (
                 select job_id,case when cycle_unit=0 then 24/job_cycle else 1 end inst_cnt from t_job_def where job_valid=1
                 union all
                 select ds_id, case when cycle_unit=0 then 24/job_cycle else 1 end inst_cnt from t_ds_def where ds_valid=1
           ) a
       ) a join (
         select sum(case when a.status=1 then 1 else 0 end) succ_inst_cnt,
                 sum(case when b.status=0 then 1 else 0 end) err_inst_cnt
           from t_job_inst a
                left join t_err_inst b on a.inst_id=b.inst_id
         where a.data_date like date_format(date_sub(curdate(), interval 1 day),'%Y%m%d%')
       ) b
    </select>

    <select id="dsMonitor" resultMap="EchartAllJobs">
        select a.inst_cnt tot_job_cnt,
                b.succ_inst_cnt succ_job_cnt,
                b.err_inst_cnt err_job_cnt
          from (
                select sum(case when cycle_unit=0 then 24/job_cycle else 1 end) inst_cnt from t_ds_def where ds_valid=1
              ) a join (
            select sum(case when a.status=1 then 1 else 0 end) succ_inst_cnt,
                   sum(case when b.status=0 then 1 else 0 end) err_inst_cnt
              from t_job_inst a
                   join t_ds_def c on a.job_id=c.ds_id
                   left join t_err_inst b on a.inst_id=b.inst_id
            where a.data_date like date_format(date_sub(curdate(), interval 1 day),'%Y%m%d%')
          ) b
    </select>

    <select id="jobMonitor" resultMap="EchartAllJobs">
        select a.inst_cnt tot_job_cnt,
               b.succ_inst_cnt succ_job_cnt,
               b.err_inst_cnt err_job_cnt
          from (
                select sum(case when cycle_unit=0 then 24/job_cycle else 1 end) inst_cnt from t_job_def where job_valid=1
              ) a join (
                select sum(case when a.status=1 then 1 else 0 end) succ_inst_cnt,
                       sum(case when b.status=0 then 1 else 0 end) err_inst_cnt
                  from t_job_inst a
                       join t_job_def c on a.job_id=c.job_id
                       left join t_err_inst b on a.inst_id=b.inst_id
                where a.data_date like date_format(date_sub(curdate(), interval 1 day),'%Y%m%d%')
             ) b
    </select>

</mapper>