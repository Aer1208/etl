<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mongohua.etl.mapper.DsDefMapper" >
    <resultMap id="DsDefMap" type="com.mongohua.etl.model.DsDef" >
        <id column="ds_id" property="dsId" jdbcType="INTEGER" />
        <result column="ds_name" property="dsName" jdbcType="VARCHAR" />
        <result column="src_tab_nam" property="srcTabName" jdbcType="VARCHAR" />
        <result column="src_db_nam" property="srcDbName" jdbcType="VARCHAR" />
        <result column="src_serv_ip" property="srcServIp" jdbcType="VARCHAR" />
        <result column="src_db_typ" property="srcDbType" jdbcType="VARCHAR" />
        <result column="src_serv_port" property="srcServPort" jdbcType="INTEGER" />
        <result column="target_path" property="targetPath" jdbcType="VARCHAR" />
        <result column="cron_desc" property="cronDesc" jdbcType="VARCHAR" />
        <result column="field_del" property="fieldDel" jdbcType="VARCHAR" />
        <result column="EXPORT_COLS" property="exportCols" jdbcType="VARCHAR" />
        <result column="where_exp" property="whereExp" jdbcType="VARCHAR" />
        <result column="priorty" property="priorty" jdbcType="INTEGER" />
        <result column="ds_valid" property="dsValid" jdbcType="INTEGER"/>
        <result column="last_status" property="lastStatus" jdbcType="INTEGER" />
        <result column="job_cycle" property="jobCycle" jdbcType="INTEGER" />
        <result column="cycle_unit" property="cycleUnit" jdbcType="INTEGER" />
        <result column="last_data_date" property="lastDataDate" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="host_name" property="hostName" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        a.ds_id
,a.ds_name
,a.src_tab_nam
,a.src_db_nam
,a.src_db_typ
,a.src_serv_ip
,a.src_serv_port
,a.target_path
,a.cron_desc
,a.field_del
,a.export_cols
,a.where_exp
,a.priorty
,a.ds_valid
,a.job_cycle
,a.cycle_unit
,a.user_id
,a.host_name
    </sql>
    <select id="getById" resultMap="DsDefMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from t_ds_def a
        where a.ds_id = #{dsId,jdbcType=INTEGER}
    </select>
    <select id="getList" resultMap="DsDefMap">
        select
        <include refid="Base_Column_List" />
        from t_ds_def a
        where ds_valid=1
    </select>
    <delete id="delete" parameterType="java.lang.Integer" >
        delete from t_ds_def
        where ds_id = #{dsId,jdbcType=INTEGER}
    </delete>
    <insert id="add" parameterType="com.mongohua.etl.model.DsDef" >
        insert into t_ds_def (ds_id
,ds_name
,src_tab_nam
,src_db_nam
,src_db_typ
,src_serv_ip
,src_serv_port
,target_path
,cron_desc
,field_del
,export_cols
,where_exp
,priorty
,ds_valid
,job_cycle
,cycle_unit
,user_id
,host_name)
        values (#{dsId,jdbcType=INTEGER}, #{dsName,jdbcType=VARCHAR}, #{srcTabName,jdbcType=VARCHAR},
        #{srcDbName,jdbcType=VARCHAR},#{srcDbType,jdbcType=VARCHAR},#{srcServIp,jdbcType=VARCHAR},#{srcServPort,jdbcType=VARCHAR},
        #{targetPath,jdbcType=VARCHAR},#{cronDesc, jdbcType=VARCHAR},#{fieldDel,jdbcType=VARCHAR},#{exportCols,jdbcType=VARCHAR},
        #{whereExp,jdbcType=VARCHAR},#{priorty,jdbcType=INTEGER},#{dsValid, jdbcType=INTEGER},#{jobCycle,jdbcType=INTEGER},
        #{cycleUnit,jdbcType=INTEGER},#{userId,jdbcType=INTEGER},#{hostName,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="com.mongohua.etl.model.DsDef">
        update t_ds_def set
        <trim prefix="" suffix="" suffixOverrides=",">
            <if test="dsName != null">
                ds_name=#{dsName, jdbcType=VARCHAR},
            </if>
            <if test="srcTabName != null">
                src_tab_nam=#{srcTabName, jdbcType=VARCHAR},
            </if>
            <if test="srcDbName != null">
                src_db_nam = #{srcDbName, jdbcType=VARCHAR},
            </if>
            <if test="srcDbType != null">
                src_db_typ = #{srcDbType, jdbcType=VARCHAR},
            </if>
            <if test="srcServIp != null">
                src_serv_ip = #{srcServIp, jdbcType=VARCHAR},
            </if>
            <if test="srcServPort != null">
                src_serv_port = #{srcServPort, jdbcType=INTEGER},
            </if>
            <if test="targetPath != null">
                cron_desc = #{cronDesc, jdbcType=VARCHAR},
            </if>
            <if test="cronDesc != null">
                target_path = #{targetPath, jdbcType=VARCHAR},
            </if>
            <if test="fieldDel != null">
                field_del = #{fieldDel, jdbcType=VARCHAR},
            </if>
            <if test="exportCols != null">
                export_cols = #{exportCols, jdbcType=VARCHAR},
            </if>
            <if test="whereExp != null">
                where_exp = #{whereExp, jdbcType=VARCHAR},
            </if>
            <if test="priorty != null">
                priorty = #{priorty, jdbcType=VARCHAR},
            </if>
            <if test="dsValid != null">
                ds_valid = #{dsValid, jdbcType=VARCHAR},
            </if>
            <if test="jobCycle != null">
                job_cycle=#{jobCycle, jdbcType=INTEGER},
            </if>
            <if test="cycleUnit != null">
                cycle_unit=#{cycleUnit,jdbcType=INTEGER},
            </if>
            <if test = "hostName != null" >
                host_name = #{hostName, jdbcType=VARCHAR},
            </if>
        </trim>
        where ds_id = #{dsId, jdbcType=INTEGER}
    </update>

    <select id="getListForPage" resultMap="DsDefMap" parameterType="HashMap">
        select
        <include refid="Base_Column_List" />
        ,case when b.inst_id is null then -1 else b.status end as last_status
        ,b.data_date last_data_date
        from t_ds_def a
              left join (
                  select a.job_id,a.data_date, a. status,a.inst_id
                    from t_job_inst a
                     join (
                        select job_id,
                                max(start_time) start_time
                          from t_job_inst
                        where start_time >= timestampadd(DAY,-7,current_date())
                         group by job_id
                     ) b on a.job_id = b.job_id and a.start_time = b.start_time
                    where a.start_time >= timestampadd(DAY,-7,current_date())
             ) b on a.ds_id=b.job_id
        where ds_valid=1
        <if test="key != null" >
            and (ds_id like concat(#{key},'%') or ds_name like concat(#{key},'%') or src_tab_nam like concat(#{key},'%'))
        </if>
        <if test="userId != null and userId !=0 and userId != 1" >
            and a.user_id = #{userId}
        </if>
        order by case when b.inst_id is null then -1 else b.status end,b.data_date
        limit #{pageIndex}, #{pageSize}
    </select>

    <select id="getListForPage2" resultMap="DsDefMap" parameterType="HashMap">
        select
        <include refid="Base_Column_List" />
        from t_ds_def a
        where 1=1
        <if test="userId != null and userId !=0 and userId != 1" >
            and a.user_id = #{userId}
        </if>
        order by ds_id
        limit #{pageIndex}, #{pageSize}
    </select>

    <select id="getCount" resultType="java.lang.Integer" parameterType="HashMap">
        select count(*)
          from t_ds_def a
         where ds_valid=1
         <if test="key != null" >
             and (ds_id like concat(#{key},'%') or ds_name like concat(#{key},'%') or src_tab_nam like concat(#{key},'%'))
         </if>
        <if test="userId != null and userId !=0 and userId != 1" >
            and a.user_id = #{userId}
        </if>
    </select>

    <select id="getCount2" resultType="java.lang.Integer" >
        select count(*) from t_ds_def a where 1=1
        <if test="userId != null and userId !=0 and userId != 1" >
            and a.user_id = #{userId}
        </if>
    </select>

    <update id="dsInvalid" >
        update t_ds_def set ds_valid=0
        where ds_valid!=0 and ds_id in
        <foreach collection="dsIds" index="index" item="id"
                 separator="," open="(" close=")">
            #{id,jdbcType=BIGINT}
        </foreach>
    </update>

    <update id="dsValid" >
        update t_ds_def set ds_valid=1
        where ds_valid!=1 and ds_id in
        <foreach collection="dsIds" index="index" item="id"
                 separator="," open="(" close=")">
            #{id,jdbcType=BIGINT}
        </foreach>
    </update>
</mapper>